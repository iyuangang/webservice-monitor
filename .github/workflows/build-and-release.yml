name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools twine
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Build package
      run: |
        python -m build
        
    - name: Upload Python package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-package
        path: dist/
        
  docker:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Python package
      uses: actions/download-artifact@v4
      with:
        name: python-package
        path: dist/
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: webservice-monitor
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,format=short
        
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        
    - name: Test Docker image
      run: |
        docker run --rm webservice-monitor:sha-$(echo ${{ github.sha }} | cut -c1-7) websvc-monitor --version
        
    - name: Save Docker image
      run: |
        IMAGE_TAG=webservice-monitor:sha-$(echo ${{ github.sha }} | cut -c1-7)
        docker save $IMAGE_TAG | gzip > webservice-monitor.tar.gz
        
    - name: Upload Docker image as artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: webservice-monitor.tar.gz
        
  release:
    needs: [build, docker]
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.version != ''
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Set version from tag or input
      run: |
        if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        else
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.VERSION }}
        name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false
        files: |
          python-package/*.whl
          python-package/*.tar.gz
          docker-image/webservice-monitor.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
